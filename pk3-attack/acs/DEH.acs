#library "DEH"
#include "zcommon.acs"

#define DEH_OBITUARY 1
#define DEH_STRAIN 2
#define DEH_SCYTHE 3
#define DEH_DEUS_VULT 4
#define DEH_INVASION_UAC 5
#define DEH_SCYTHEX 6
#define DEH_UAC_ULTRA 7
#define DEH_JENESIS 8
#define DEH_LUNATIC 9
#define DEH_SURVIVE_IN_HELL 10
#define DEH_GOING_DOWN 11
#define DEH_RESURGENCE 12
#define DEH_PSX_DOOM 13
#define DEH_VALIANT 14
#define DEH_ANCIENT_ALIENS 15
#define DEH_GRIDLOCK 16
#define DEH_EVITERNITY 17
#define DEH_ANTARES 18
#define DEH_REMNANT 19
#define DEH_SUNDER 20
#define DEH_DOOM64 21
#define DEH_MAYANMISHAP 22
#define DEH_COUNTERATTACK 23
#define DEH_AVACTOR 24
#define DEH_MASKIMXUL 25
#define DEH_180_MINUTES_POUR_VIVRE 26
#define DEH_SCIMITAR 27
#define DEH_NDCP2 28
#define DEH_NOVA2 29
#define DEH_DOOMZERO 30
#define DEH_NEGATIVEONE -1 //I had to.
#define DEH_ROWDYRUDY 31
#define DEH_RAYMOHAWK 32

Script "Dehacked_MonsterReset" (int mapset, int origLevel, int tierLevel, int bossSpecial)
{
	bool keep_spawn = TRUE;

	switch(mapset)
	{
	default:
		break;
	case DEH_OBITUARY:
		keep_spawn = GetCVar("deh_enable_obituary");
		break;
	case DEH_STRAIN:
		keep_spawn = GetCVar("deh_enable_strain");
		break;
	case DEH_SCYTHE:
		keep_spawn = GetCVar("deh_enable_scythe2");
		break;
	case DEH_DEUS_VULT:
		keep_spawn = GetCVar("deh_enable_deusvult2");
		break;
	case DEH_INVASION_UAC:
		keep_spawn = GetCVar("deh_enable_invasionuac");
		break;
	case DEH_SCYTHEX:
		keep_spawn = GetCVar("deh_enable_scythex");
		break;
	case DEH_UAC_ULTRA:
		keep_spawn = GetCVar("deh_enable_uacultra");
		break;
	case DEH_JENESIS:
		keep_spawn = GetCVar("deh_enable_jenesis");
		break;
	case DEH_LUNATIC:
		keep_spawn = GetCVar("deh_enable_lunatic");
		break;
	case DEH_SURVIVE_IN_HELL:
		keep_spawn = GetCVar("deh_enable_survive_in_hell");
		break;
	case DEH_GOING_DOWN:
		keep_spawn = GetCVar("deh_enable_going_down");
		break;
	case DEH_RESURGENCE:
		keep_spawn = GetCVar("deh_enable_resurgence");
		break;
	case DEH_PSX_DOOM:
		keep_spawn = GetCVar("deh_enable_psx_doom");
		break;
	case DEH_VALIANT:
		keep_spawn = GetCVar("deh_enable_valiant");
		break;
	case DEH_ANCIENT_ALIENS:
		keep_spawn = GetCVar("deh_enable_ancient_aliens");
		break;
	case DEH_GRIDLOCK:
		keep_spawn = GetCVar("deh_enable_gridlock");
		break;
	case DEH_EVITERNITY:
		keep_spawn = GetCVar("deh_enable_eviternity");
		break;
	case DEH_ANTARES:
		keep_spawn = GetCVar("deh_enable_antares");
		break;
	case DEH_REMNANT:
		keep_spawn = GetCVar("deh_enable_remnant");
		break;
	case DEH_SUNDER:
		keep_spawn = GetCVar("deh_enable_sunder");
		break;
	case DEH_DOOM64:
		keep_spawn = GetCVar("deh_enable_doom64");
		break;
	case DEH_MAYANMISHAP:
		keep_spawn = GetCVar("deh_enable_mayanmishap");
		break;
	case DEH_COUNTERATTACK:
		keep_spawn = GetCVar("deh_enable_counterattack");
		break;
	case DEH_AVACTOR:
		keep_spawn = GetCVar("deh_enable_avactor");
		break;
	case DEH_MASKIMXUL:
		keep_spawn = GetCVar("deh_enable_maskimxul");
		break;
	case DEH_180_MINUTES_POUR_VIVRE:
		keep_spawn = GetCVar("deh_enable_180_minutes_pour_vivre");
		break;
	case DEH_SCIMITAR:
		keep_spawn = GetCVar("deh_enable_scimitar");
		break;
	case DEH_NDCP2:
		keep_spawn = GetCVar("deh_enable_ndcp2");
		break;
	case DEH_NOVA2:
		keep_spawn = GetCVar("deh_enable_nova2");
		break;
	case DEH_DOOMZERO:
		keep_spawn = GetCVar("deh_enable_doomzero");
		break;
	case DEH_NEGATIVEONE:
		keep_spawn = GetCVar("deh_enable_negativeone");
		break;
	case DEH_ROWDYRUDY:
		keep_spawn = GetCVar("deh_enable_rowdyrudy");
		break;
	case DEH_RAYMOHAWK:
		keep_spawn = GetCVar("deh_enable_raymohawk");
		break;
	}
	
	if(GetCVar("deh_level_scaling") == 1 && GetLevelInfo(LEVELINFO_LEVELNUM) < origLevel)
	{
		keep_spawn = FALSE;
	} else if(GetCVar("deh_level_scaling") == 2 && GetLevelInfo(LEVELINFO_LEVELNUM) < tierLevel) {
		keep_spawn = FALSE;
	}
	
	if(bossSpecial == 1 && GetCVar("deh_force_map07_fix") == 1 && GetLevelInfo(LEVELINFO_LEVELNUM) == 7) //Hack for Mancubi and Arachnotrons
	{
		keep_spawn = TRUE;
	}
	
	if(keep_spawn)
	{
		SetResultValue(0); //Keep the spawn
	} else {
		SetResultValue(1); //Reset
	}
}

Script "Dehacked_SubtractiveReset" (void)
{
	SetResultValue(GetCVar("deh_subtractive_rendering"));
}

Script "Dehacked_NoVileAttack" (void)
{
	SetResultValue(GetCVar("deh_novileattack"));
}

Script "Dehacked_CyberCount" (void)
{
	int a, b, c, d, e, f, g, h, i, j, k, l;
	a = ThingCountName("DEHCyberdemon", 0);
	b = ThingCountName("Haymaker", 0);
	c = ThingCountName("Afrit", 0);
	d = ThingCountName("DarkCyberdemon", 0);
	e = ThingCountName("Leviathan", 0);
	f = ThingCountName("RayMohawkCyberdemon", 0);
	g = ThingCountName("RemnantCardinal", 0);
	h = ThingCountName("VivreHeresiarch", 0);
	i = ThingCountName("Hierophant2", 0);
	j = ThingCountName("GridlockCardinal", 0);
	k = ThingCountName("HellSmith", 0);
	l = ThingCountName("Motherdemon", 0);
	int result = a + b + c + d + e + f + g + h + i + j + k + l;
	if(result > 3)
	{ //Keep the spawn
		SetResultValue(0);
	} else { //Reset
		SetResultValue(1);
	}
}

Script "Dehacked_SpiderCount" (void)
{
	int a, b, c, d, e, f, g, h, i, j, k;
	a = ThingCountName("DEHSpiderMastermind", 0);
	b = ThingCountName("HiveMother", 0);
	c = ThingCountName("FlyingMastermind", 0);
	d = ThingCountName("AvactorBrain", 0);
	e = ThingCountName("IndomitableMastermind", 0);
	f = ThingCountName("SpectralLeviathan", 0);
	g = ThingCountName("WarlordOfHell", 0);
	h = ThingCountName("AngryMastermind", 0);
	i = ThingCountName("GateMaster", 0);
	j = ThingCountName("RemnantMaster", 0);
	k = ThingCountName("ValiantSuperVile", 0);
	int result = a + b + c + d + e + f + g + h + i + j + k;
	if(result > 1)
	{ //Keep the spawn
		SetResultValue(0);
	} else { //Reset
		SetResultValue(1);
	}
}

int BossSelection = 0;
Script "Dehacked_BossSelect" OPEN
{
	BossSelection = 0;
	if(ThingCountName("BossTarget", 0) > 0 && ThingCountName("DEHFinalBossSpawner", 0) > 0)
	{
		if(GetCVar("deh_finalboss") <= 0)
		{
			BossSelection = random(1, 13);
		} else {
			BossSelection = GetCVar("deh_finalboss");
		}
	}
	if(GetCVar("deh_finalbosspreview"))
	{
		SetHudSize(512,384,1);
		SetFont("BIGFONT");
		if(BossSelection == 1)
		{
			HudMessageBold(s:"VS. Icon of Sin";HUDMSG_FADEINOUT,0,CR_UNTRANSLATED,256.0,144.1,3.0,1.0,1.0);
		}
		else if(BossSelection == 2)
		{
			HudMessageBold(s:"VS. The Final Countdown";HUDMSG_FADEINOUT,0,CR_WHITE,256.0,144.1,3.0,1.0,1.0);
		}
		else if(BossSelection == 3)
		{
			HudMessageBold(s:"VS. Hell Smith";HUDMSG_FADEINOUT,0,CR_FIRE,256.0,144.1,3.0,1.0,1.0);
		}
		else if(BossSelection == 4)
		{
			HudMessageBold(s:"VS. Spider Mastermind?";HUDMSG_FADEINOUT,0,CR_TAN,256.0,144.1,3.0,1.0,1.0);
		}
		else if(BossSelection == 5)
		{
			HudMessageBold(s:"VS. Hierophant";HUDMSG_FADEINOUT,0,CR_ORANGE,256.0,144.1,3.0,1.0,1.0);
		}
		else if(BossSelection == 6)
		{
			HudMessageBold(s:"VS. Super Archvile";HUDMSG_FADEINOUT,0,CR_RED,256.0,144.1,3.0,1.0,1.0);
		}
		else if(BossSelection == 7)
		{
			HudMessageBold(s:"VS. Gridlock Cardinal";HUDMSG_FADEINOUT,0,CR_DARKGREEN,256.0,144.1,3.0,1.0,1.0);
		}
		else if(BossSelection == 8)
		{
			HudMessageBold(s:"VS. Overlord";HUDMSG_FADEINOUT,0,CR_DARKRED,256.0,144.1,3.0,1.0,1.0);
		}
		else if(BossSelection == 9)
		{
			HudMessageBold(s:"VS. Motherdemon";HUDMSG_FADEINOUT,0,CR_BRICK,256.0,144.1,3.0,1.0,1.0);
		}
		else if(BossSelection == 10)
		{
			HudMessageBold(s:"VS. Archangelus";HUDMSG_FADEINOUT,0,CR_YELLOW,256.0,144.1,3.0,1.0,1.0);
		}
		else if(BossSelection == 11)
		{
			HudMessageBold(s:"VS. The Leviathan";HUDMSG_FADEINOUT,0,CR_BLUE,256.0,144.1,3.0,1.0,1.0);
		}
		else if(BossSelection == 12)
		{
			HudMessageBold(s:"VS. The Inquisitor";HUDMSG_FADEINOUT,0,CR_BLUE,256.0,144.1,3.0,1.0,1.0);
		}
		else if(BossSelection == 13)
		{
			HudMessageBold(s:"VS. Baphomet";HUDMSG_FADEINOUT,0,CR_DARKGRAY,256.0,144.1,3.0,1.0,1.0);
		}
		else if(BossSelection == 14)
		{
			HudMessageBold(s:"VS. The Bubble Ship";HUDMSG_FADEINOUT,0,CR_SAPPHIRE,256.0,144.1,3.0,1.0,1.0);
		}
	}
}

Script "Dehacked_BossSpawn" (void)
{
	if(BossSelection <= 1)
	{
		SetActorState(0, "NormalFinalBoss", 0);
	}
	else if(BossSelection == 2)
	{
		SetActorState(0, "FinalCountdown", 0);
	}
	else if(BossSelection == 3)
	{
		SetActorState(0, "HellSmith", 0);
	}
	else if(BossSelection == 4)
	{
		SetActorState(0, "SpiderMastermind", 0);
	}
	else if(BossSelection == 5)
	{
		SetActorState(0, "Hierophant", 0);
	}
	else if(BossSelection == 6)
	{
		SetActorState(0, "SuperArchvile", 0);
	}
	else if(BossSelection == 7)
	{
		SetActorState(0, "GridlockCardinal", 0);
	}
	else if(BossSelection == 8)
	{
		SetActorState(0, "Overlord", 0);
	}
	else if(BossSelection == 9)
	{
		SetActorState(0, "Motherdemon", 0);
	}
	else if(BossSelection == 10)
	{
		SetActorState(0, "Archangelus", 0);
	}
	else if(BossSelection == 11)
	{
		SetActorState(0, "Leviathan", 0);
	}
	else if(BossSelection == 12)
	{
		SetActorState(0, "TheInquisitor", 0);
	}
	else if(BossSelection == 13)
	{
		SetActorState(0, "Baphomet", 0);
	}
	else if(BossSelection == 14)
	{
		SetActorState(0, "BubbleShip", 0);
	}
}

Script "Dehacked_BossCheck" (void)
{
	SetResultValue(BossSelection);
}

Script "Dehacked_BossEyeCount" (void)
{
	SetResultValue(ThingCountName("DEHFinalBossSpawner", 0));
}

Script "Dehacked_BossTargetCount" (void)
{
	SetResultValue(ThingCountName("BossTarget", 0));
}

Script "Dehacked_BossMusic" (int music)
{
	if(GetCVar("deh_finalbossmusic"))
	{
		switch(music)
		{
		Case 0:
			SetMusic("");
			break;
		Case 1:
			SetMusic("FINCOUNT");
			break;
		Case 2:
			SetMusic("SURVIVE");
			break;
		Case 3:
			SetMusic("GOINDOWN");
			break;
		Case 4:
			SetMusic("NOVAHIER");
			break;
		Case 5:
			SetMusic("VALIANT");
			break;
		Case 6:
			SetMusic("GRIDLOCK");
			break;
		Case 7:
			SetMusic("OVERLORD");
			break;
		Case 8:
			SetMusic("64MOTHER");
			break;
		Case 9:
			SetMusic("ARCANGEL");
			break;
		Case 10:
			SetMusic("ANTARES");
			break;
		Case 11:
			SetMusic("BAPHOMET");
			break;
		Case 12:
			SetMusic("MICROMAN");
			break;
		}
	}
}

Script "Dehacked_BossExitHandler" (int boss)
{
	switch(boss)
	{
	Case 1:
		SetMusic("FINCOUNT"); //This one is deliberately forced
		Delay(181); //Intro
		SetFont("BIGFONT");
		HudMessageBold(s:"10";
		HUDMSG_FADEINOUT, 1, CR_PURPLE, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"10";
		HUDMSG_FADEINOUT, 2, CR_PURPLE, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //0:30
		HudMessageBold(s:"9";
		HUDMSG_FADEINOUT, 1, CR_BLUE, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"9";
		HUDMSG_FADEINOUT, 2, CR_BLUE, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //1:00
		HudMessageBold(s:"8";
		HUDMSG_FADEINOUT, 1, CR_LIGHTBLUE, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"8";
		HUDMSG_FADEINOUT, 2, CR_LIGHTBLUE, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //1:30
		HudMessageBold(s:"7";
		HUDMSG_FADEINOUT, 1, CR_CYAN, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"7";
		HUDMSG_FADEINOUT, 2, CR_CYAN, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //2:00
		HudMessageBold(s:"6";
		HUDMSG_FADEINOUT, 1, CR_GREEN, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"6";
		HUDMSG_FADEINOUT, 2, CR_GREEN, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //2:30
		HudMessageBold(s:"5";
		HUDMSG_FADEINOUT, 1, CR_GOLD, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"5";
		HUDMSG_FADEINOUT, 2, CR_GOLD, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //3:00
		HudMessageBold(s:"4";
		HUDMSG_FADEINOUT, 1, CR_ORANGE, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"4";
		HUDMSG_FADEINOUT, 2, CR_ORANGE, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //3:30
		HudMessageBold(s:"3";
		HUDMSG_FADEINOUT, 1, CR_FIRE, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"3";
		HUDMSG_FADEINOUT, 2, CR_FIRE, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //4:00
		HudMessageBold(s:"2";
		HUDMSG_FADEINOUT, 1, CR_RED, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"2";
		HUDMSG_FADEINOUT, 2, CR_RED, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //4:30
		HudMessageBold(s:"1";
		HUDMSG_FADEINOUT, 1, CR_DARKRED, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"1";
		HUDMSG_FADEINOUT, 2, CR_DARKRED, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //5:00
		HudMessageBold(s:"0";
		HUDMSG_FADEINOUT, 1, CR_WHITE, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"0";
		HUDMSG_FADEINOUT, 2, CR_WHITE, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(35); //5:01
		AmbientSound("brain/death", 127);
		Delay(120);
		Exit_Normal(0);
		break;
	}
}

Script "Dehacked_Death" DEATH
{
	if(GameType() == GAME_SINGLE_PLAYER)
	{
		Delay(120);
		ACS_NamedTerminate("Dehacked_BossExitHandler", 0);
	}
}

//From Eviternity's ACS
bool buffState = FALSE;
Script "Dehacked_BossMultiBuff" (void) {
	if(buffState == FALSE) {
		int BossHealth = GetActorProperty(0, APROP_HEALTH);
		if(PlayerCount() > 1) {
			SetActorProperty(0, APROP_HEALTH, ((PlayerCount() + 1) * BossHealth) / 2);
		}
		buffState = TRUE;
	}
}